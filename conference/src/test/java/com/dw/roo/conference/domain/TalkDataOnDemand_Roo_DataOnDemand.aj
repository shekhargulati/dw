// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.dw.roo.conference.domain;

import com.dw.roo.conference.domain.SpeakerDataOnDemand;
import com.dw.roo.conference.domain.Talk;
import java.util.List;
import java.util.Random;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect TalkDataOnDemand_Roo_DataOnDemand {
    
    declare @type: TalkDataOnDemand: @Component;
    
    private Random TalkDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Talk> TalkDataOnDemand.data;
    
    @Autowired
    private SpeakerDataOnDemand TalkDataOnDemand.speakerDataOnDemand;
    
    public Talk TalkDataOnDemand.getNewTransientTalk(int index) {
        com.dw.roo.conference.domain.Talk obj = new com.dw.roo.conference.domain.Talk();
        java.lang.String description = "description_" + index;
        if (description.length() > 4000) {
            description  = description.substring(0, 4000);
        }
        obj.setDescription(description);
        obj.setSpeaker(speakerDataOnDemand.getRandomSpeaker());
        obj.setTitle("title_" + index);
        return obj;
    }
    
    public Talk TalkDataOnDemand.getSpecificTalk(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Talk obj = data.get(index);
        return Talk.findTalk(obj.getId());
    }
    
    public Talk TalkDataOnDemand.getRandomTalk() {
        init();
        Talk obj = data.get(rnd.nextInt(data.size()));
        return Talk.findTalk(obj.getId());
    }
    
    public boolean TalkDataOnDemand.modifyTalk(Talk obj) {
        return false;
    }
    
    public void TalkDataOnDemand.init() {
        data = com.dw.roo.conference.domain.Talk.findTalkEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Talk' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.dw.roo.conference.domain.Talk>();
        for (int i = 0; i < 10; i++) {
            com.dw.roo.conference.domain.Talk obj = getNewTransientTalk(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
